% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{extractGroupAsBinary}
\alias{extractGroupAsBinary}
\title{Convert Specific Group of Column Names to Binary}
\usage{
extractGroupAsBinary(
  countMatrix,
  partIndex,
  splitSymbol = "_",
  targetSymbols = "E",
  trueValue = 1,
  falseValue = 0
)
}
\arguments{
\item{countMatrix}{A matrix or data frame with column names.}

\item{partIndex}{A positive integer specifying the position of the part in the split column names.}

\item{splitSymbol}{A character string specifying the delimiter to split the column names. Default is "_".}

\item{targetSymbols}{A character or character vector specifying the target group(s) to match. Default is "E".}

\item{trueValue}{Value to be returned for matching groups. Default is \code{1}.}

\item{falseValue}{Value to be returned for non-matching groups. Default is \code{0}.}
}
\value{
A numeric vector of binary values representing whether each column name's
specified part matches the target symbol(s).
}
\description{
This function extracts a specified group from column names based on a delimiter, then
checks if each extracted group matches the target symbol(s). The result is a binary
representation, where matches are represented as \code{1} (or \code{trueValue}), and non-matches
as \code{0} (or \code{falseValue}).
}
\examples{
testMatrix <- matrix(1:6, ncol=3)
colnames(testMatrix) <- c("name_E_1", "name_F_2", "name_E_3")
extractGroupAsBinary(testMatrix, 2) # Expected: 1 0 1
}
